"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IPasskeyManager__factory = void 0;
var ethers_1 = require("ethers");
var _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "encodedId",
                type: "string",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "publicKeyX",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "publicKeyY",
                type: "uint256",
            },
        ],
        name: "PasskeyAdded",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: "string",
                name: "encodedId",
                type: "string",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "publicKeyX",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "publicKeyY",
                type: "uint256",
            },
        ],
        name: "PasskeyRemoved",
        type: "event",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_encodedId",
                type: "string",
            },
            {
                internalType: "uint256",
                name: "publicKeyX",
                type: "uint256",
            },
            {
                internalType: "uint256",
                name: "publicKeyY",
                type: "uint256",
            },
        ],
        name: "addPasskey",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "string",
                name: "_encodedId",
                type: "string",
            },
        ],
        name: "removePasskey",
        outputs: [],
        stateMutability: "nonpayable",
        type: "function",
    },
];
var IPasskeyManager__factory = exports.IPasskeyManager__factory = /** @class */ (function () {
    function IPasskeyManager__factory() {
    }
    IPasskeyManager__factory.createInterface = function () {
        return new ethers_1.utils.Interface(_abi);
    };
    IPasskeyManager__factory.connect = function (address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    };
    IPasskeyManager__factory.abi = _abi;
    return IPasskeyManager__factory;
}());

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PasskeyVerificationLib,
  PasskeyVerificationLibInterface,
} from "../PasskeyVerificationLib";

const _abi = [
  {
    inputs: [],
    name: "nn",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pp",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60d6610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe7300000000000000000000000000000000000000003014608060405260043610603d5760003560e01c806372a4c30f14604257806391327ec614607a575b600080fd5b60687fffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc63255181565b60405190815260200160405180910390f35b60687fffffffff00000001000000000000000000000000ffffffffffffffffffffffff8156fea26469706673582212201bbe3bddc5e655cc8ad592946d2f38381e452c39069698e5fb4e359dfe7b800f64736f6c634300080c0033";

type PasskeyVerificationLibConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PasskeyVerificationLibConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PasskeyVerificationLib__factory extends ContractFactory {
  constructor(...args: PasskeyVerificationLibConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<PasskeyVerificationLib> {
    return super.deploy(overrides || {}) as Promise<PasskeyVerificationLib>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PasskeyVerificationLib {
    return super.attach(address) as PasskeyVerificationLib;
  }
  override connect(signer: Signer): PasskeyVerificationLib__factory {
    return super.connect(signer) as PasskeyVerificationLib__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PasskeyVerificationLibInterface {
    return new utils.Interface(_abi) as PasskeyVerificationLibInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PasskeyVerificationLib {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as PasskeyVerificationLib;
  }
}

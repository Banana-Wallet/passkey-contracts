/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PasskeyManager,
  PasskeyManagerInterface,
} from "../PasskeyManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "encodedId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "publicKeyX",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "publicKeyY",
        type: "uint256",
      },
    ],
    name: "PasskeyAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "encodedId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "publicKeyX",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "publicKeyY",
        type: "uint256",
      },
    ],
    name: "PasskeyRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "AddedHashedEncodedIds",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_encodedId",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_publicKeyX",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_publicKeyY",
        type: "uint256",
      },
    ],
    name: "addPasskey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_encodedId",
        type: "string",
      },
    ],
    name: "removePasskey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "data",
        type: "bytes32",
      },
    ],
    name: "toHex",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610b47806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80632a9e679b1461005157806349e894d814610077578063981b69b314610097578063fbc79d09146100ac575b600080fd5b61006461005f3660046108ac565b6100bf565b6040519081526020015b60405180910390f35b61008a6100853660046108ac565b6100e0565b60405161006e91906108c5565b6100aa6100a5366004610963565b610147565b005b6100aa6100ba3660046109b4565b610159565b600181815481106100cf57600080fd5b600091825260209091200154905081565b60606100eb8261046c565b6100f8608084901b61046c565b6040517f30780000000000000000000000000000000000000000000000000000000000006020820152602281019290925260428201526062016040516020818303038152906040529050919050565b6101538484848461065a565b50505050565b3330146101ad5760405162461bcd60e51b815260206004820152601960248201527f504d30312063616c6c6572206973206e6f742057616c6c65740000000000000060448201526064015b60405180910390fd5b60018054116101fe5760405162461bcd60e51b815260206004820152601b60248201527f504d30332063616e6e6f742072656d6f7665206c617374206b6579000000000060448201526064016101a4565b600082826040516020016102139291906109f6565b60408051601f19818403018152828252805160209182012060008181528083528381206060860185528054865260018101549386019390935260028301805492965090949384019161026490610a06565b80601f016020809104026020016040519081016040528092919081815260200182805461029090610a06565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b505050919092525050815191925050158015906102fd5750602081015115155b61034b5760405162461bcd60e51b81526004016101a49060208082526004908201527f504d303500000000000000000000000000000000000000000000000000000000604082015260600190565b6000828152602081905260408120818155600181018290559061037160028301826107d6565b505060005b60015481101561042257826001828154811061039457610394610a41565b9060005260206000200154141561041a57600180546103b4908290610a6d565b815481106103c4576103c4610a41565b9060005260206000200154600182815481106103e2576103e2610a41565b60009182526020909120015560018054806103ff576103ff610a84565b60019003818190600052602060002001600090559055610422565b600101610376565b50805160208201516040517fe21423841bbca413b89d7851e2dd81a44bfea36e6689ea217958e06ef8288af59261045e92889288929190610a9a565b60405180910390a150505050565b7aff00000000000000ff00000000000000ff00000000000000ff00006bffffffff0000000000000000604083901c9081167bffffffff00000000000000000000000000000000000000000000000084161760201c6fffffffff000000000000000000000000919091167fffffffff0000000000000000000000000000000000000000000000000000000084161717601081901c9182167eff00000000000000ff00000000000000ff00000000000000ff000000000000821617600890811c7bff00000000000000ff00000000000000ff00000000000000ff000000939093167fff00000000000000ff00000000000000ff00000000000000ff000000000000009290921691909117919091179081901c7e0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f167f0f000f000f000f000f000f000f000f000f000f000f000f000f000f000f000f00600492831c1617906105f0827f0606060606060606060606060606060606060606060606060606060606060606610ada565b901c7f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f0f1660076106209190610af2565b61064a827f3030303030303030303030303030303030303030303030303030303030303030610ada565b6106549190610ada565b92915050565b6000848460405160200161066f9291906109f6565b60408051601f1981840301815291815281516020928301206000818152928390529120549091501580156106b25750600081815260208190526040902060010154155b6107005760405162461bcd60e51b81526004016101a49060208082526004908201527f504d303400000000000000000000000000000000000000000000000000000000604082015260600190565b6000604051806060016040528085815260200184815260200187878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939094525050848152602081815260409182902084518155818501516001820155918401518051949550859492935061078d9260028501929190910190610813565b509050507f9d497b4ea3f21a6a726508afee07fb039fecd01368e75ef2f607eb7274284e8b868686866040516107c69493929190610a9a565b60405180910390a1505050505050565b5080546107e290610a06565b6000825580601f106107f2575050565b601f0160209004906000526020600020908101906108109190610897565b50565b82805461081f90610a06565b90600052602060002090601f0160209004810192826108415760008555610887565b82601f1061085a57805160ff1916838001178555610887565b82800160010185558215610887579182015b8281111561088757825182559160200191906001019061086c565b50610893929150610897565b5090565b5b808211156108935760008155600101610898565b6000602082840312156108be57600080fd5b5035919050565b600060208083528351808285015260005b818110156108f2578581018301518582016040015282016108d6565b81811115610904576000604083870101525b50601f01601f1916929092016040019392505050565b60008083601f84011261092c57600080fd5b50813567ffffffffffffffff81111561094457600080fd5b60208301915083602082850101111561095c57600080fd5b9250929050565b6000806000806060858703121561097957600080fd5b843567ffffffffffffffff81111561099057600080fd5b61099c8782880161091a565b90989097506020870135966040013595509350505050565b600080602083850312156109c757600080fd5b823567ffffffffffffffff8111156109de57600080fd5b6109ea8582860161091a565b90969095509350505050565b8183823760009101908152919050565b600181811c90821680610a1a57607f821691505b60208210811415610a3b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082821015610a7f57610a7f610a57565b500390565b634e487b7160e01b600052603160045260246000fd5b606081528360608201528385608083013760006080858301015260006080601f19601f870116830101905083602083015282604083015295945050505050565b60008219821115610aed57610aed610a57565b500190565b6000816000190483118215151615610b0c57610b0c610a57565b50029056fea2646970667358221220fc9747b37f52358962a6bfef8197fac87ecdf30281523d97c0f6727218be535764736f6c634300080c0033";

type PasskeyManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PasskeyManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PasskeyManager__factory extends ContractFactory {
  constructor(...args: PasskeyManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<PasskeyManager> {
    return super.deploy(overrides || {}) as Promise<PasskeyManager>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PasskeyManager {
    return super.attach(address) as PasskeyManager;
  }
  override connect(signer: Signer): PasskeyManager__factory {
    return super.connect(signer) as PasskeyManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PasskeyManagerInterface {
    return new utils.Interface(_abi) as PasskeyManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PasskeyManager {
    return new Contract(address, _abi, signerOrProvider) as PasskeyManager;
  }
}
